NDSummary.OnToolTipsLoaded("File:lib/clParse2.py",{200:"<div class=\"NDToolTip TFunction LPython\"><div id=\"NDPrototype200\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">def</span> clParse(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PName first\">args,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PName first\">flag,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PName first\">numOfArgs</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">1</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">CONVERT TO DESIRED TYPE IN CODE CALLING THIS arguments returned will always be string type args : (give it args) flag : (a string, &quot;-o&quot; for example) numOfArgs : number of arguments after the flag to return</div></div>",201:"<div class=\"NDToolTip TFunction LPython\"><div id=\"NDPrototype201\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">def</span> flagInArgs(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PName first last\">args,</td></tr><tr><td class=\"PName first last\">flag</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Returns boolean value if flag exists in file</div></div>"});